name: Flutter Build v1.0

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'

      # Step 3: Install dependencies and log output
      - name: Install dependencies
        run: |
          echo "==== Installing dependencies ===="
          flutter pub get | tee flutter_pub_get_log.txt

      # Step 4: Build APK and log output
      - name: Build APK
        run: |
          echo "==== Building APK ===="
          flutter build apk --release --no-tree-shake-icons | tee flutter_build_log.txt
          # Rename the APK to Qwikqr.apk
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Qwikqr.apk
          echo "Build complete: Qwikqr.apk"

      # Step 5: Upload APK artifact for download
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: qwikqr-apk
          path: build/app/outputs/flutter-apk/Qwikqr.apk
          retention-days: 7

      # Step 6: Upload build logs
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            flutter_pub_get_log.txt
            flutter_build_log.txt
          retention-days: 7

      # Optional Step 7: Copy APK to EC2/Android device
      # - name: Copy APK to EC2 device
      #   uses: appleboy/scp-action@v0.1.5
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ubuntu
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     source: build/app/outputs/flutter-apk/Qwikqr.apk
      #     target: /sdcard/Download/Qwikqr.apk
